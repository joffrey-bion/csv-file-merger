plugins {
    id "com.jfrog.bintray" version "1.0"
    id "edu.sc.seis.launch4j" version "1.6.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'

group = 'org.hildan.tools'
version = '1.0'
description = 'Merges together CSV files that have the same column headers.'

mainClassName = "org.hildan.tools.csvmerger.CsvFileMerger"

repositories {
    mavenCentral()
    maven { url  "http://dl.bintray.com/joffrey-bion/maven"  }
}

dependencies {
    compile 'org.hildan.utils:csv-utils:0.9'
    testCompile 'junit:junit:4.+'
}

// to build a fat jar with all dependencies included
jar {
    manifest { attributes "Main-Class": mainClassName }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

// wraps the executable jar into an exe file
launch4j {
    mainClassName = project.mainClassName
    headerType = "console"
    jar = 'lib/' + project.jar.archiveName
    outfile = project.name + '-' + project.version + '.exe'
    icon = '../resources/main/csv-file-merger.ico'
    windowTitle = project.name
}

// defines what to distribute (jar and exe)
artifacts {
    archives jar
    archives file(buildDir.name + '/' + launch4j.outputDir + '/' + launch4j.outfile)
}

bintrayUpload.dependsOn tasks.launch4j

// used to upload artifacts to the Bintray repo
bintray {
    user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : ''
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : ''
    configurations = ['archives']

    publish = true // the version should be auto published after an upload

    pkg {
        repo = project.hasProperty('bintrayRepoApps') ? project.bintrayRepoApps : ''
        name = project.name
        desc = project.description
        labels = ['csv', 'merge', 'merger']

        String githubRepoName = project.name
        websiteUrl = 'https://github.com/joffrey-bion/' + githubRepoName
        issueTrackerUrl = 'https://github.com/joffrey-bion/' + githubRepoName + '/issues'
        vcsUrl = 'https://github.com/joffrey-bion/' + githubRepoName + '.git'

        licenses = ['MIT']
        version {
            vcsTag = 'v' + project.version
            gpg { sign = true }
        }
    }
}